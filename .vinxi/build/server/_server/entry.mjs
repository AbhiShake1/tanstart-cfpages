import{defaultTransformer as o,isPlainObject as f,isRedirect as h,isNotFound as m}from"@tanstack/react-router";import{t as F,i as v,g as S,a as T}from"./http.mjs";import{eventHandler as N}from"h3";import"node:async_hooks";function j(n){return globalThis.MANIFEST[n]}const I=N(C);async function C(n){return E(F(n))}async function E(n,c){var r,u;const l=n.method,g=new URL(n.url,"http://localhost:3000"),s=Object.fromEntries(g.searchParams.entries()),a=s._serverFnId,d=s._serverFnName;if(!a||!d)throw new Error("Invalid request");v(typeof a=="string");const w=(u=await((r=j("server").chunks[a])==null?void 0:r.import()))==null?void 0:u[d],i=await(async()=>{try{const e=await(async()=>{var p;if((p=n.headers.get("Content-Type"))!=null&&p.includes("multipart/form-data"))return v(l.toLowerCase()!=="get","GET requests with FormData payloads are not supported"),await n.formData();if(l.toLowerCase()==="get")return s.payload?o.parse(s.payload):void 0;const R=await n.text();return o.parse(R)})(),t=await w(e);return t instanceof Response?t:f(t)&&"result"in t&&t.result instanceof Response?t.result:h(t)||m(t)?y(t):new Response(t!==void 0?o.stringify(t):void 0,{status:S(T()),headers:{"Content-Type":"application/json"}})}catch(e){return e instanceof Response?e:f(e)&&"result"in e&&e.result instanceof Response?e.result:h(e)||m(e)?y(e):(console.error("Server Fn Error!"),console.error(e),console.info(),new Response(o.stringify(e),{status:500,headers:{"Content-Type":"application/json"}}))}})();if(i.headers.get("Content-Type")==="application/json"){const t=await i.clone().text();t&&JSON.stringify(JSON.parse(t))}return i}function y(n){const{headers:c,...r}=n;return new Response(JSON.stringify(r),{status:200,headers:{"Content-Type":"application/json",...c||{}}})}export{I as default};
